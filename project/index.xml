<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on μβ</title>
    <link>https://matbesancon.github.io/project/</link>
    <description>Recent content in Projects on μβ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017 Mathieu Besançon</copyright>
    <lastBuildDate>Sat, 09 Sep 2017 00:00:00 +0200</lastBuildDate>
    
	<atom:link href="https://matbesancon.github.io/project/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A Bilevel Framework for Optimal Price-Setting of Time-and-Level-of-Use Tariffs</title>
      <link>https://matbesancon.github.io/project/tlou/</link>
      <pubDate>Tue, 18 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://matbesancon.github.io/project/tlou/</guid>
      <description>The pre-print of the presented work can be found on arXiv. The manuscript has also been submitted and should be published in the coming months.
This project was presented at several conferences, including:
 Optimization days, Montréal, May 2018 NSERC Energy Storage Technology Network (NEST-Net) annual meeting, Toronto, June 2018. It was under the network&amp;rsquo;s project Optimal Brokerage Models for the Grid Integration of Energy Storage. JuliaCon, London, August 2018 (poster)  An open-source Julia package has been released here for other researchers to model Time-and-Level-of-Use tariffs.</description>
    </item>
    
    <item>
      <title>JuliaStats contributions</title>
      <link>https://matbesancon.github.io/project/distributions/</link>
      <pubDate>Tue, 18 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://matbesancon.github.io/project/distributions/</guid>
      <description>Contributions to the JuliaStats ecosystem, especially the Distributions.jl package for modeling probability distributions in Julia using a minimal and flexible interface.</description>
    </item>
    
    <item>
      <title>YASPR: Yet Another Snake on Piston &amp; Rust</title>
      <link>https://matbesancon.github.io/project/yaspr/</link>
      <pubDate>Tue, 18 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://matbesancon.github.io/project/yaspr/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Mixed continuous-discrete distributions</title>
      <link>https://matbesancon.github.io/project/mixed_distributions/</link>
      <pubDate>Tue, 04 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://matbesancon.github.io/project/mixed_distributions/</guid>
      <description></description>
    </item>
    
    <item>
      <title>JuliaGraphs contributions</title>
      <link>https://matbesancon.github.io/project/juliagraphs/</link>
      <pubDate>Wed, 10 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://matbesancon.github.io/project/juliagraphs/</guid>
      <description>Starting from a weird Kaggle side-project during the Chrismas holidays, I gradually got involved in the JuliaGraphs ecosystem. After some discussion on the Julia Slack #graphs channel, I went from reporting a simple feature I needed to helping with the re-organization by splitting out two packages:
 LightGraphsMatching.jl LightGraphsFlows.jl  I also implemented the min-cost flow problem formulated as a linear optimization problem formulated using MathProgBase.jl, using any user-provided solver.</description>
    </item>
    
    <item>
      <title>WebFuncs</title>
      <link>https://matbesancon.github.io/project/webfuncs/</link>
      <pubDate>Wed, 10 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://matbesancon.github.io/project/webfuncs/</guid>
      <description>WebFuncs.jl is a Julia project testing the language out of its natural scope. Having built quite a bit with Go and Python, I wanted to see if the Julia ecosystem had tools for HTTP handling.
The inspiration of a simple-to-use function server came from the fx project. Define your function, the package throws it as a server for you.
The package has been accepted on Julia package repository and can be fetched using Pkg.</description>
    </item>
    
  </channel>
</rss>