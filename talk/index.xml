<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Recent &amp; Upcoming Talks on μβ</title>
    <link>https://matbesancon.github.io/talk/</link>
    <description>Recent content in Recent &amp; Upcoming Talks on μβ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017 Mathieu Besançon</copyright>
    <lastBuildDate>Sun, 01 Jan 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="/talk/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Graph interfaces, bespoke graphs for every occasion</title>
      <link>https://matbesancon.github.io/talk/juliacon18/</link>
      <pubDate>Thu, 09 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://matbesancon.github.io/talk/juliacon18/</guid>
      <description>&lt;p&gt;We presented the &lt;em&gt;LightGraphs.jl&lt;/em&gt; package with &lt;a href=&#34;https://twitter.com/fairbanksjp&#34; target=&#34;_blank&#34;&gt;James&lt;/a&gt; for anyone in need of a
simple &amp;amp; extensible graph library in Julia, the core interface for abstract graphs and essential algorithms included.&lt;/p&gt;

&lt;p&gt;Anyone can come up with their own graph type, and we show it by building the simplest graph type
from an adjacency matrix, implementing the LightGraphs interface, and then re-using the whole
ecosystem on this type for free.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;[1] Image source: Photo by Fancycrave on Unsplash&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Intro to package development in Julia</title>
      <link>https://matbesancon.github.io/talk/julia_montreal/</link>
      <pubDate>Thu, 08 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://matbesancon.github.io/talk/julia_montreal/</guid>
      <description>&lt;p&gt;A quick introduction to the why and how of package development in Julia for
scientific computing, with two applications of custom arrays. One of them,
MatFuncs.jl was live-coded and available &lt;a href=&#34;https://github.com/matbesancon/MatFuncs.jl&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Golang in a multi-project, multi-platform team</title>
      <link>https://matbesancon.github.io/talk/golang_talk_lille/</link>
      <pubDate>Thu, 06 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://matbesancon.github.io/talk/golang_talk_lille/</guid>
      <description>&lt;p&gt;This talk was part of a second meetup introducing Golang use cases
to Lille tech community. The slides (in French) can be found
&lt;a href=&#34;https://go-talks.appspot.com/github.com/matbesancon/golang-talk/talk.slide#1&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
